# Generated by Django 5.2.5 on 2025-10-12 16:47

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0002_remove_expense_partner_alter_product_unique_together_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('code', models.CharField(blank=True, max_length=10, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'db_table': 'regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='stores.region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'cities',
                'ordering': ['region', 'name'],
                'unique_together': {('region', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название магазина')),
                ('inn', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='ИНН должен быть 12-14 цифр', regex='^\\d{12,14}$')], verbose_name='ИНН')),
                ('owner_name', models.CharField(max_length=200, verbose_name='ФИО владельца')),
                ('phone', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Формат: +996XXXXXXXXX', regex='^\\+996\\d{9}$')], verbose_name='Телефон')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('debt', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Долг')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='stores.city', verbose_name='Город')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stores', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='stores.region', verbose_name='Область')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
                'db_table': 'stores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Общая сумма запроса')),
                ('note', models.TextField(blank=True, verbose_name='Примечание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_requests', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Запрос магазина',
                'verbose_name_plural': 'Запросы магазинов',
                'db_table': 'store_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreRequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена за единицу')),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stores.storerequest', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Позиция запроса',
                'verbose_name_plural': 'Позиции запросов',
                'db_table': 'store_request_items',
            },
        ),
        migrations.CreateModel(
            name='StoreSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_at', models.DateTimeField(auto_now=True, verbose_name='Дата выбора')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_users', to='stores.store', verbose_name='Выбранный магазин')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_store', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Выбор магазина',
                'verbose_name_plural': 'Выборы магазинов',
                'db_table': 'store_selections',
            },
        ),
        migrations.CreateModel(
            name='PartnerInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Количество')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('partner', models.ForeignKey(limit_choices_to={'role': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to=settings.AUTH_USER_MODEL, verbose_name='Партнёр')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Инвентарь партнёра',
                'verbose_name_plural': 'Инвентарь партнёров',
                'db_table': 'partner_inventory',
                'unique_together': {('partner', 'product')},
            },
        ),
        migrations.CreateModel(
            name='StoreInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Количество')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Инвентарь магазина',
                'verbose_name_plural': 'Инвентарь магазинов',
                'db_table': 'store_inventory',
                'unique_together': {('store', 'product')},
            },
        ),
        migrations.CreateModel(
            name='StoreProductRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Запрошенное количество')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_requests', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Запрошенный товар',
                'verbose_name_plural': 'Запрошенные товары',
                'db_table': 'store_product_requests',
                'unique_together': {('store', 'product')},
            },
        ),
        migrations.AddIndex(
            model_name='storerequest',
            index=models.Index(fields=['store', 'created_at'], name='store_reque_store_i_b6d370_idx'),
        ),
    ]
