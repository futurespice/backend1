# Generated by Django 5.2.5 on 2025-09-11 20:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('regions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=200, verbose_name='Название магазина')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('partner', models.ForeignKey(blank=True, limit_choices_to={'role': 'partner'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_stores', to=settings.AUTH_USER_MODEL, verbose_name='Партнёр')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores', to='regions.region', verbose_name='Регион')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='store_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
                'db_table': 'stores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('approved', 'Одобрен'), ('rejected', 'Отклонён'), ('delivered', 'Доставлен'), ('cancelled', 'Отменён')], default='pending', max_length=20, verbose_name='Статус')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата запроса')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обработки')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата доставки')),
                ('store_notes', models.TextField(blank=True, verbose_name='Комментарий магазина')),
                ('partner_notes', models.TextField(blank=True, verbose_name='Комментарий партнёра')),
                ('partner', models.ForeignKey(limit_choices_to={'role': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='partner_requests', to=settings.AUTH_USER_MODEL, verbose_name='Партнёр')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Запрос товаров',
                'verbose_name_plural': 'Запросы товаров',
                'db_table': 'store_requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PartnerInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Количество')),
                ('reserved_quantity', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Зарезервировано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('partner', models.ForeignKey(limit_choices_to={'role': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='partner_inventory', to=settings.AUTH_USER_MODEL, verbose_name='Партнёр')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_inventory', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Инвентарь партнёра',
                'verbose_name_plural': 'Инвентари партнёров',
                'db_table': 'partner_inventory',
                'ordering': ['partner', 'product'],
                'unique_together': {('partner', 'product')},
            },
        ),
        migrations.CreateModel(
            name='StoreInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Количество')),
                ('reserved_quantity', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Зарезервировано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_inventory', to='products.product', verbose_name='Товар')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Остаток товара',
                'verbose_name_plural': 'Остатки товаров',
                'db_table': 'store_inventory',
                'ordering': ['store', 'product'],
                'unique_together': {('store', 'product')},
            },
        ),
        migrations.CreateModel(
            name='AdminInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_for_partners', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Зарезервировано для партнёров')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Количество')),
                ('approved_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Одобренное количество')),
                ('delivered_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Доставленное количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_items', to='products.product', verbose_name='Товар')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stores.storerequest', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Позиция запроса',
                'verbose_name_plural': 'Позиции запросов',
                'db_table': 'store_request_items',
                'unique_together': {('request', 'product')},
            },
        ),
    ]
