# Generated by Django 5.2.5 on 2025-09-11 20:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('stores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
                'db_table': 'carts',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=200, verbose_name='Имя клиента')),
                ('customer_phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон клиента')),
                ('customer_address', models.TextField(blank=True, verbose_name='Адрес клиента')),
                ('status', models.CharField(choices=[('pending', 'Ожидает подтверждения'), ('confirmed', 'Подтвержден'), ('completed', 'Выполнен'), ('cancelled', 'Отменен')], default='pending', max_length=20, verbose_name='Статус')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата заказа')),
                ('confirmed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата подтверждения')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата доставки')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Подытог')),
                ('bonus_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Скидка по бонусам')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Итоговая сумма')),
                ('payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма оплаты')),
                ('debt_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма долга')),
                ('bonus_items_count', models.PositiveIntegerField(default=0, verbose_name='Количество бонусных товаров')),
                ('bonus_points_earned', models.PositiveIntegerField(default=0, verbose_name='Заработано бонусных очков')),
                ('bonus_points_used', models.PositiveIntegerField(default=0, verbose_name='Использовано бонусных очков')),
                ('delivery_required', models.BooleanField(default=False, verbose_name='Требуется доставка')),
                ('delivery_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Стоимость доставки')),
                ('notes', models.TextField(blank=True, verbose_name='Комментарии к заказу')),
                ('internal_notes', models.TextField(blank=True, verbose_name='Внутренние комментарии')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создал заказ')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_orders', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Заказ клиента',
                'verbose_name_plural': 'Заказы клиентов',
                'db_table': 'customer_orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Количество')),
                ('bonus_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Бонусное количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена за единицу')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Общая стоимость')),
                ('bonus_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Скидка за бонусные товары')),
                ('bonus_points_earned', models.PositiveIntegerField(default=0, verbose_name='Заработано бонусных очков')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Себестоимость за единицу')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказов',
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='ProductRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидает рассмотрения'), ('approved', 'Одобрен'), ('partially_approved', 'Частично одобрен'), ('rejected', 'Отклонён'), ('cancelled', 'Отменён')], default='pending', max_length=20, verbose_name='Статус')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата запроса')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата рассмотрения')),
                ('total_requested_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Общая сумма запроса')),
                ('total_approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Одобренная сумма')),
                ('partner_notes', models.TextField(blank=True, verbose_name='Комментарий партнёра')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Комментарий администратора')),
                ('partner', models.ForeignKey(limit_choices_to={'role': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='product_requests', to=settings.AUTH_USER_MODEL, verbose_name='Партнёр')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL, verbose_name='Рассмотрел')),
            ],
            options={
                'verbose_name': 'Запрос товаров',
                'verbose_name_plural': 'Запросы товаров',
                'db_table': 'product_requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductRequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Запрошенное количество')),
                ('approved_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Одобренное количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена за единицу')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.productrequest', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Позиция запроса товаров',
                'verbose_name_plural': 'Позиции запросов товаров',
                'db_table': 'product_request_items',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Количество')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.cart', verbose_name='Корзина')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция корзины',
                'verbose_name_plural': 'Позиции корзины',
                'db_table': 'cart_items',
                'unique_together': {('cart', 'product')},
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['store', 'status'], name='customer_or_store_i_79202c_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='customer_or_order_d_43b6b2_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer_phone'], name='customer_or_custome_693b62_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('order', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='productrequestitem',
            unique_together={('request', 'product')},
        ),
    ]
