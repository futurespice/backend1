from django.contrib.auth import get_user_model
from django.utils import timezone
from .models import Notification

User = get_user_model()


class NotificationService:
    """–°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""

    @staticmethod
    def create_notification(recipient, type, title, message, related_object=None):
        """–°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""

        notification_data = {
            'recipient': recipient,
            'type': type,
            'title': title,
            'message': message,
        }

        if related_object:
            notification_data['related_object_type'] = related_object.__class__.__name__.lower()
            notification_data['related_object_id'] = related_object.id

        return Notification.objects.create(**notification_data)

    @staticmethod
    def notify_admins_new_store(store):
        """–£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –º–∞–≥–∞–∑–∏–Ω–µ"""
        admins = User.objects.filter(role='admin', is_active=True)

        for admin in admins:
            NotificationService.create_notification(
                recipient=admin,
                type='store_registered',
                title='–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–∞–≥–∞–∑–∏–Ω–∞',
                message=f'–ú–∞–≥–∞–∑–∏–Ω "{store.store_name}" –æ–∂–∏–¥–∞–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è',
                related_object=store
            )

    @staticmethod
    def notify_store_approved(store):
        """–£–≤–µ–¥–æ–º–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏"""
        NotificationService.create_notification(
            recipient=store.user,
            type='store_approved',
            title='–í–∞—à –º–∞–≥–∞–∑–∏–Ω –æ–¥–æ–±—Ä–µ–Ω! üéâ',
            message=f'–ú–∞–≥–∞–∑–∏–Ω "{store.store_name}" —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã.',
            related_object=store
        )

    @staticmethod
    def notify_store_rejected(store):
        """–£–≤–µ–¥–æ–º–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏"""
        NotificationService.create_notification(
            recipient=store.user,
            type='store_rejected',
            title='–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞',
            message=f'–ú–∞–≥–∞–∑–∏–Ω "{store.store_name}" –æ—Ç–∫–ª–æ–Ω—ë–Ω. –ü—Ä–∏—á–∏–Ω–∞: {store.rejection_reason}',
            related_object=store
        )

    @staticmethod
    def notify_partner_new_order(partner, order):
        """–£–≤–µ–¥–æ–º–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ"""
        NotificationService.create_notification(
            recipient=partner,
            type='new_order',
            title='–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
            message=f'–ú–∞–≥–∞–∑–∏–Ω "{order.store.store_name}" —Å–æ–∑–¥–∞–ª –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É {order.total_amount}',
            related_object=order
        )