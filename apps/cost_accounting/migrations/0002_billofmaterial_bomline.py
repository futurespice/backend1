# Generated by Django 5.2.5 on 2025-09-02 10:26

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cost_accounting', '0001_initial'),
        ('products', '0002_expense_product_bonus_every_n_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillOfMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Версия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bom', to='products.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Спецификация (BOM)',
                'verbose_name_plural': 'Спецификации (BOM)',
            },
        ),
        migrations.CreateModel(
            name='BOMLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Например: 0.150 кг или 2.000 шт на 1 ед. bom.product', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Кол-во на 1 ед. целевого продукта')),
                ('unit', models.CharField(choices=[('kg', 'кг'), ('pcs', 'шт')], max_length=8, verbose_name='Ед. изм.')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Сюзерен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='cost_accounting.billofmaterial', verbose_name='BOM')),
                ('component_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='used_as_component_lines', to='products.product', verbose_name='Компонент-продукт (полуфабрикат)')),
                ('expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='used_in_bom_lines', to='cost_accounting.expense', verbose_name='Расход (ингредиент/упаковка)')),
            ],
            options={
                'verbose_name': 'Строка BOM',
                'verbose_name_plural': 'Строки BOM',
                'ordering': ('id',),
                'indexes': [models.Index(fields=['bom'], name='idx_bomline_bom'), models.Index(fields=['expense'], name='idx_bomline_expense'), models.Index(fields=['component_product'], name='idx_bomline_component_product')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('component_product__isnull', True), ('expense__isnull', False)), models.Q(('component_product__isnull', False), ('expense__isnull', True)), _connector='OR'), name='bomline_one_of_component'), models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('bom',), name='bomline_single_primary_per_bom')],
            },
        ),
    ]
