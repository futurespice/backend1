# Generated by Django 5.2.5 on 2025-09-11 20:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('expense_type', models.CharField(choices=[('raw_material', 'Сырьё'), ('labor', 'Труд'), ('overhead', 'Накладные расходы'), ('packaging', 'Упаковка'), ('transport', 'Транспорт')], default='raw_material', max_length=20, verbose_name='Тип расхода')),
                ('unit', models.CharField(choices=[('kg', 'кг'), ('pcs', 'шт'), ('monthly', 'в месяц'), ('daily', 'в день'), ('hourly', 'в час')], default='kg', max_length=20, verbose_name='Единица измерения')),
                ('price_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Цена за единицу')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
            ],
            options={
                'verbose_name': 'Расход',
                'verbose_name_plural': 'Расходы',
                'db_table': 'expenses',
                'ordering': ['expense_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('output_quantity', models.DecimalField(decimal_places=3, default=Decimal('1'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bom_specs', to='products.product')),
            ],
            options={
                'verbose_name': 'Спецификация',
                'verbose_name_plural': 'Спецификации',
                'db_table': 'bill_of_materials',
            },
        ),
        migrations.CreateModel(
            name='BOMLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('notes', models.TextField(blank=True)),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='cost_accounting.billofmaterial')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cost_accounting.expense')),
            ],
            options={
                'verbose_name': 'Строка спецификации',
                'verbose_name_plural': 'Строки спецификаций',
                'db_table': 'bom_lines',
            },
        ),
        migrations.CreateModel(
            name='DailyExpenseLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('quantity_used', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_logs', to='cost_accounting.expense')),
            ],
            options={
                'verbose_name': 'Дневной лог расходов',
                'verbose_name_plural': 'Дневные логи расходов',
                'db_table': 'daily_expense_logs',
                'unique_together': {('expense', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MonthlyOverheadBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('planned_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('actual_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cost_accounting.expense')),
            ],
            options={
                'db_table': 'monthly_overhead_budgets',
                'unique_together': {('year', 'month', 'expense')},
            },
        ),
        migrations.CreateModel(
            name='ProductExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_unit', models.DecimalField(decimal_places=3, default=Decimal('1'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Количество на единицу товара')),
                ('is_active', models.BooleanField(default=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_links', to='cost_accounting.expense')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_expenses', to='products.product')),
            ],
            options={
                'verbose_name': 'Расход товара',
                'verbose_name_plural': 'Расходы товаров',
                'db_table': 'product_expenses',
                'unique_together': {('product', 'expense')},
            },
        ),
        migrations.CreateModel(
            name='ProductionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('quantity_produced', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('cost_per_unit', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
                ('status', models.CharField(choices=[('planned', 'Запланирована'), ('in_progress', 'В производстве'), ('completed', 'Завершена')], default='planned', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_batches', to='products.product')),
            ],
            options={
                'verbose_name': 'Производственная партия',
                'verbose_name_plural': 'Производственные партии',
                'db_table': 'production_batches',
                'unique_together': {('product', 'date')},
            },
        ),
    ]
