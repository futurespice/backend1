# Generated by Django 5.2.5 on 2025-09-02 09:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0002_expense_product_bonus_every_n_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('physical', 'Физический'), ('overhead', 'Накладной')], max_length=20)),
                ('name', models.CharField(db_index=True, max_length=120)),
                ('unit', models.CharField(blank=True, choices=[('kg', 'Кг'), ('pcs', 'Шт')], help_text='Ед. изм. для физического расхода (кг/шт). Для накладных пусто.', max_length=8, null=True)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, help_text='Цена за единицу (кг/шт) для физического расхода.', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('suzerain', 'Сюзерен'), ('vassal', 'Вассал'), ('commoner', 'Обыватель')], default='commoner', max_length=16)),
                ('state', models.CharField(choices=[('mechanical', 'Механическое'), ('automatic', 'Автоматическое')], default='automatic', max_length=16)),
                ('is_universal', models.BooleanField(default=False, help_text="Если включено — расход применяется ко всем товарам (тип 'универсальный' из ТЗ).")),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CostSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=django.utils.timezone.localdate)),
                ('produced_qty', models.DecimalField(decimal_places=6, help_text='Количество произведённого товара (шт/кг).', max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('suzerain_input_amount', models.DecimalField(decimal_places=6, default=Decimal('0'), help_text='Введённый объём Сюзерена (если выбран такой сценарий).', max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('physical_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('overhead_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('cost_per_unit', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=14)),
                ('revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('net_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('breakdown', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_accounting_snapshots', related_query_name='cost_accounting_snapshot', to='products.product')),
            ],
            options={
                'indexes': [models.Index(fields=['date', 'product'], name='cost_accoun_date_126c01_idx')],
                'unique_together': {('product', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MechanicalExpenseLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=django.utils.timezone.localdate)),
                ('quantity', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('note', models.CharField(blank=True, max_length=200)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechanical_logs', to='cost_accounting.expense')),
            ],
            options={
                'unique_together': {('expense', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ProductExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratio_per_product_unit', models.DecimalField(decimal_places=6, help_text='Единиц расхода на 1 ед. товара (шт/кг). Для накладных — коэффициент.', max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('is_active', models.BooleanField(default=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_links', to='cost_accounting.expense')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_expenses', to='products.product')),
            ],
            options={
                'unique_together': {('product', 'expense')},
            },
        ),
    ]
