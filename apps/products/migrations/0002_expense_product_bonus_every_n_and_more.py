# Generated by Django 5.2.5 on 2025-09-02 07:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Статья расхода')),
                ('kind', models.CharField(choices=[('physical', 'Физический'), ('overhead', 'Накладной')], default='physical', max_length=16, verbose_name='Вид')),
                ('status', models.CharField(choices=[('suzerain', 'Сюзерен'), ('vassal', 'Вассал'), ('commoner', 'Обыватель')], default='commoner', max_length=16, verbose_name='Статус')),
                ('state', models.CharField(choices=[('mechanic', 'Механический'), ('auto', 'Автоматический')], default='auto', max_length=16, verbose_name='Состояние')),
                ('scope', models.CharField(choices=[('universal', 'Универсальный'), ('per_product', 'По товарам')], default='universal', max_length=16, verbose_name='Область применения')),
                ('unit', models.CharField(blank=True, max_length=16, verbose_name='Ед. изм. (для физ.)')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Расход',
                'verbose_name_plural': 'Расходы',
                'db_table': 'expenses',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='bonus_every_n',
            field=models.PositiveIntegerField(default=21, verbose_name='Каждый N-й бесплатно (штучные)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создан'),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_available',
            field=models.BooleanField(default=True, verbose_name='Доступен к заказу'),
        ),
        migrations.AlterField(
            model_name='product',
            name='min_order_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('1.000'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.1'))], verbose_name='Минимальное количество к заказу'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=200, unique=True, verbose_name='Название товара'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена (шт/кг)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='stock_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Остаток на складе'),
        ),
        migrations.AlterField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлён'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='is_primary',
            field=models.BooleanField(default=False, verbose_name='Основное'),
        ),
        migrations.CreateModel(
            name='ExpenseValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(default=django.utils.timezone.now)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('period_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.expense')),
            ],
            options={
                'verbose_name': 'Значение расхода',
                'verbose_name_plural': 'Значения расходов',
                'db_table': 'expense_values',
                'ordering': ['-date_from'],
            },
        ),
        migrations.CreateModel(
            name='CostRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cost_per_unit', models.DecimalField(decimal_places=4, max_digits=14)),
                ('breakdown', models.JSONField(blank=True, default=dict)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_snapshots', to='products.product')),
            ],
            options={
                'verbose_name': 'Себестоимость (дата)',
                'verbose_name_plural': 'Себестоимость по датам',
                'db_table': 'cost_register',
                'ordering': ['-date', 'product_id'],
                'unique_together': {('date', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ExpenseBinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_per_unit', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=12)),
                ('weight_factor', models.DecimalField(decimal_places=6, default=Decimal('1'), max_digits=12)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bindings', to='products.expense')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_bindings', to='products.product')),
            ],
            options={
                'verbose_name': 'Привязка расхода к товару',
                'verbose_name_plural': 'Привязки расходов к товарам',
                'db_table': 'expense_bindings',
                'unique_together': {('expense', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductBOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_per_unit', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='used_in', to='products.product', verbose_name='Ингредиент')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bom_items', to='products.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Ингредиент продукта',
                'verbose_name_plural': 'Ингредиенты продуктов',
                'db_table': 'product_bom',
                'unique_together': {('product', 'ingredient')},
            },
        ),
    ]
