# Generated by Django 5.2.5 on 2025-09-11 20:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'product_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название товара')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('article', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Артикул')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Слаг')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Себестоимость')),
                ('unit', models.CharField(choices=[('kg', 'кг'), ('g', 'г'), ('l', 'л'), ('ml', 'мл'), ('pcs', 'шт'), ('pack', 'упак'), ('box', 'коробка'), ('bag', 'мешок')], default='pcs', max_length=10, verbose_name='Единица измерения')),
                ('stock_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Остаток на складе')),
                ('low_stock_threshold', models.DecimalField(decimal_places=3, default=10, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Минимальный остаток')),
                ('is_bonus_eligible', models.BooleanField(default=True, verbose_name='Участвует в бонусной программе')),
                ('bonus_points', models.PositiveIntegerField(default=1, verbose_name='Бонусные очки за товар')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='products/main/', verbose_name='Главное изображение')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Вес (кг)')),
                ('volume', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Объём (л)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен для заказа')),
                ('production_time_days', models.PositiveIntegerField(default=1, verbose_name='Время производства (дни)')),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Срок годности (дни)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.category', verbose_name='Категория')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название характеристики')),
                ('value', models.CharField(max_length=200, verbose_name='Значение')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='Единица измерения')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товаров',
                'db_table': 'product_characteristics',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/', verbose_name='Изображение')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Название')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товаров',
                'db_table': 'product_images',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Старая цена')),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Новая цена')),
                ('reason', models.CharField(blank=True, max_length=200, verbose_name='Причина изменения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'История цен',
                'verbose_name_plural': 'История цен',
                'db_table': 'product_price_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_name_6f9890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['article'], name='products_article_34d9d1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='products_categor_4083ff_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active', 'is_available'], name='products_is_acti_706d22_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productcharacteristic',
            unique_together={('product', 'name')},
        ),
    ]
