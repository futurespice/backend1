# Generated by Django 5.2.5 on 2025-10-12 09:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('expense_type', models.CharField(choices=[('physical', 'Физические'), ('overhead', 'Накладные')], max_length=20)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unit', models.CharField(blank=True, choices=[('piece', 'Штука'), ('kg', 'Килограмм'), ('gram', 'Грамм')], max_length=10, null=True)),
                ('monthly_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('suzerain', 'Сюзерен'), ('vassal', 'Вассал'), ('civilian', 'Обыватель')], default='civilian', max_length=20)),
                ('state', models.CharField(choices=[('mechanical', 'Механическое'), ('automatic', 'Автоматическое')], default='automatic', max_length=20)),
                ('apply_type', models.CharField(choices=[('regular', 'Обычный'), ('universal', 'Универсальный')], default='regular', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expenses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('category', models.CharField(choices=[('piece', 'Штучный'), ('weight', 'Весовой')], default='piece', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_bonus', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
                ('suzerain_expense', models.ForeignKey(blank=True, limit_choices_to={'status': 'suzerain'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suzerain_products', to='products.expense')),
            ],
            options={
                'db_table': 'products',
                'ordering': ['position', '-created_at'],
                'unique_together': {('partner', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DefectiveProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reason', models.TextField(blank=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defective_products', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defects', to='products.product')),
            ],
            options={
                'db_table': 'defective_products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BonusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_count', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonus_given', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonus_received', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'db_table': 'bonus_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'db_table': 'product_images',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='ProductionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'production_records',
                'ordering': ['-date'],
                'unique_together': {('partner', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ProductExpenseRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proportion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_relations', to='products.expense')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_relations', to='products.product')),
            ],
            options={
                'db_table': 'product_expense_relations',
                'unique_together': {('product', 'expense')},
            },
        ),
        migrations.CreateModel(
            name='ProductionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_produced', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('suzerain_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('ingredient_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('overhead_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.productionrecord')),
            ],
            options={
                'db_table': 'production_items',
                'unique_together': {('record', 'product')},
            },
        ),
        migrations.CreateModel(
            name='MechanicalExpenseEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expense', models.ForeignKey(limit_choices_to={'state': 'mechanical'}, on_delete=django.db.models.deletion.CASCADE, to='products.expense')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechanical_expenses', to='products.productionrecord')),
            ],
            options={
                'db_table': 'mechanical_expense_entries',
                'unique_together': {('record', 'expense')},
            },
        ),
        migrations.CreateModel(
            name='StoreProductCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_count', models.IntegerField(default=0)),
                ('bonus_eligible_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_counters', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_counters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'store_product_counters',
                'unique_together': {('store', 'partner', 'product')},
            },
        ),
    ]
